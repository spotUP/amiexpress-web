@database 1oo-TU
@master 1oo-T-Updater.guide
@$VER: 1oo% T-Updater 2.4  96-12-29
@author "Anti-g/1oo%/Bad Brothers"
@(c) "Dez 1996 by 1oo%"
@help "main"
@index main

@node "main" "Guide to 1oo% T-Updater v2.4 by Anti-g/1oo%/Bad Brothers"
@next "intro"
          @{fg fill}                      .
             ..:.      ::.  ..::..     ..:
            ::  `:.. .: `:.::    `::..:'  ::. ..:.@{fg text}
           @{fg fill}::@{fg text}   ____________________@{fg fill}:@{fg text}________@{fg fill}:@{fg text}__  @{fg fill}.:   .@{fg text}
            @{fg fill}:@{fg text}  )__      __    __   (__    __   (_  @{fg fill}:  .@{fg text}
          @{fg fill}..::@{fg text}  |       |     /     _     /     | @{fg fill}.:''@{fg text}
           @{fg fill}...:@{fg text} |_______|___________|___________| @{fg fill} ::@{fg text}
           @{fg fill} :.  .:@{fg text}                            @{fg fill}..  ::.@{fg text}
            @{fg fill} ..: `:.@{fg text} @{fg shine}1 o o@{fg fill}.:.@{fg shine}p E R C E N T@{fg text} @{fg fill}... :.:'@{fg text}

   @{"      -  - --^-) T - U P D A T E R  v2.4 (-^-- -  -      " link intro}

               --------@{"  INTRODUCTION  " link "intro" 0}--------
               @{b}-@{ub}-------@{"  INSTALLATION  " link "install" 0}-------@{b}-@{ub}
               @{b}---@{ub}-----@{"   HOW TO USE   " link "touse" 0}-----@{b}---@{ub}
               @{b}-----@{ub}---@{"   bUG REPORT   " link "bugs" 0}---@{b}-----@{ub}
               @{b}----@{ub}----@{" HISTORY/FUTURE " link "plans" 0}----@{b}----@{ub}
               @{b}------@{ub}--@{"  REGISTRATION  " link "reg" 0}--@{b}------@{ub}
               @{b}----@{ub}----@{"   DISCLAIMER   " link "disclaimer" 0}----@{b}----@{ub}
               @{b}-----@{ub}---@{"     AUTHOR     " link "author" 0}---@{b}-----@{ub}
               @{b}---@{ub}-----@{"    RELEASES    " link "releases" 0}-----@{b}---@{ub}
               @{b}-@{ub}-------@{"     GREETS     " link "greets" 0}-------@{b}-@{ub}
               --------@{" OUTPUT  SYNTAX " link "syntax" 0}--------

   @{" -  - --^-) code by Anti-g/1oo%/Bad Brothers (-^-- -  -  " link author}

@{fg fill}   !!! WHEN YOU UPDATE FROM v2.1 DELETE THE OLD USERDATAS !!!@{fg text}

@endnode

@node "intro" "--------) INTRODUCTION (--------"
@next "install"
@prev "main"
@{b}@{u} Introduction: @{ub}@{uu}

 This is Version 2.2 of the 1oo percent Updater for the Tempest BBS program.
 It's purpose is the automatication of a process you'll probably exercise
 on a nearly daily base: the updating of files (mostly Tempest programs).

 As the author of the Tempest BBS is very eager, nearly every day there is 
 some change. This program will make the whole thing a little easier.
 You just have to log in to your local support BBS and start the Updater.
 Then you'll see a listing of all the new files which arrived since your last
 login. You can now use Updaters flexible method of flagging the files.
 The selected files will then be packed and sent to you.

 This program will be a great help for your users. It's easy to install and 
 quite fast, since it's programmed in C and thus some levels faster than
 the typical ARexx equivalent. It'll be a relieve to your system load, too.
 The users won't have to stay as long on your BBS than before, as the 
 Updater is by far more faster to operate than a file list.

 Remember: Any Download is @{b}FREE@{ub}!
 

@{b}@{u} Features: @{ub}@{uu}

        @{i} * automatic detection of screen type (amiga or ibm)

         * automatic detection of screen length
           (use multiple pages if one isn't enough)

         * no maximus files limit!

         * new files or updates will be flagged automaticaly

         * supports flag-ranges and multiple flags in one entry
           (e.g. "-4 6 9-12 19-15 25- 21 23")

         * supports flag since date

         * installable in user-defined path

         * files can be packed with lzx/lha/zip (user-configurable)

         * file_id.diz will be added automaticaly (configurable)

         * in main display
                    - name 
                    - size
                    - date
                    - time
                    - comment (filecomment or FileId.library type)
           of the files are displayed

         * use default transfer protocols
           (Hydra and Smodem sstill enabled...)

         * supports local download

         * supports remote upload

         * supports killing files

         * nice gui configuration programm

         * external logo- design- and helpfiles

         * counts times of execution and the number of files you downloaded
           (today/user/total)

         * resulting file is generated according to current date and time
           (e.g. T-Aug05_1645.lzx)

         * shows number of currently flagged files

         * fast: -programmed in C
                 -ANSI-code optimized!@{ui}

@{b}@{u} Requirements: @{ub}@{uu}
 
  - Kickstart v39 (may run with earlier versions, not tested much)
  - LHA LZX and ZIP packer in 'c:' (if enabled)
  - gtlayout.library for gui configuration programm
  - @{fg shine}Tempest 3.61 (or later)!!!!!!!!!!!!!!
 
 
                            @{" back to main menu " link "main" 0}
@endnode

@node "install" "--------) INSTALLATION (--------"
@next "touse"
@prev "intro"
@{b}@{u} Installation: @{ub}@{uu}

 First unpack the archive anywhere (it is packed twice
 to avoid problems with intelligent strippers).

 @{b}Files included in the archive:@{ub}
 
 --@{b}---------------------------------------------------------------@{ub}--
 T-Updater      	: the executable for the T-Updater
                   	  BBS door for tempest
 @{"T-Updater-Config" link "tu-config" 0}   	: configuration program (CLI!)
 T-Updater.ami       	: ISO ANSI logo by neurodancer
 T-Updater.ami1      	: alternative logo made by miracle
 @{"T-Updater.diz" link "tu-diz" 0}      	: file_id.diz for the files generated
                      	  by the T-Updater
 T-Updater.hlp       	: help file for normal access
 T-Updater.hlpS      	: help file for sysop  access
 T-Updater.guide     	: amigaguide documentation
 T-Updater.ibm       	: IBM ANSI logo by miracle
 @{"T-Updater.names" link "tu-names" 0}     	: file which contains the names
                       	  of the users who have sysop access
 @{"T-Updater.output.ami" link "tu-output" 0}	: ISO ANSI output file
 @{"T-Updater.output.ibm" link "tu-output" 0}	: IBM ANSI output file
 --@{b}---------------------------------------------------------------@{ub}--


 Then execute the T-Updater-Config from CLI and modify the T-Updater.names
 and T-Updater.diz files.

 If you've done this, only the '.opt' file has to be changed,
 like this:

 --@{b}----------------------@{ub}> cut here <@{b}---------------------@{ub}--
 @{fg shine}[*,*,*,30,*] = update |T-DOOR|Doors:1oo-T-Updater/T-Updater@{fg text}
 --@{b}----------------------@{ub}> cut here <@{b}---------------------@{ub}--
        ^^
       (only user who have access to filebase 30 can use the updater)



 Then, you just have to copy the files in the update directory and you're
 ready. Voila...
                            @{" back to main menu " link "main" 0}

@endnode

@node "tu-config" "T-Updater-Config"
@next "install"
@prev "install"
@{u}@{b} T-Updater-Config: @{ub}@{uu}
 
 The new version of the T-Updater is configurable via a GUI program which
 uses the gtlayout.library. 
 This program has to be started on the CLI not as a Tempest door.

 Short description of the configurable resources:

 @{b}logolength@{ub}		: length of the logo files (in lines)

 @{b}paths@{ub}:
 	update-dir	: path to the update-files
	temp-dir	: path to where the archive is created

 @{b}misc@{ub}:

	@{i}filename@{ui}:

	Format of the filename. 
	The right gadget always shows a current sample.
	It's specified using the following parameters:

        Specifier   Replaced with . . .
        ----------  -------------------
           %a       the locale's abbreviated weekday name
           %A       the locale's full weekday name
           %b       the locale's abbreviated month name
           %B       the locale's full month name
           %c       the locale's appropriate date and time representation
           %d       the day of the month as a decimal number (01-31)
           %H       the hour (24-hour clock) as a decimal number (00-23)
           %I       the hour (12-hour clock) as a decimal number (00-12)
           %j       the day of the year as a decimal number (001-366)
           %m       the month as a decimal number (01-12)
           %M       the minute as a decimal number (00-59)
           %p       the locale's equivalent of the AM and PM designations
                    associated with a 12-hour clock
           %S       the second as a decimal number (00-61)
           %U       the week number of the year (the first Sunday as the
                    first day of week 1) as a decimal number (00-53)
           %w       the weekday as a decimal number (0-6), where Sunday is 0
           %W       the week number of the year (the first Monday as the
                    first day of week 1) as a decimal number (00-53)
           %x       the locale's appropriate date representation
           %X       the locale's appropriate time representation
           %y       the year without the century as a decimal number (00-99)
           %Y       the year with the century as a decimal number
           %Z       the time zone name or abbreviation; no characters
                    indicates the time zone is not determinable
           %%       a percent sign.



	@{i}enable packer(s)@{ui}	: which packer(s) are allowed to the user

	@{i}sysop-commands@{ui}		: what access level the user has to have 
				  to use the sysop commands	
	@{i}commenttype@{ui}		: which type of file comments should be used
				  Either amigados or FileID.library

 @{b}save@{ub}			: quits the program and saves the preferences

 @{b}quit@{ub}			: quits the program without saving the preferences



                            @{" <- back " link "install" 0}

@endnode

@node "tu-names" "T-Updater.names"
@next "install"
@prev "install"
@{u}@{b} T-Updater.names: @{ub}@{uu}

 In this file, the users who are allowed sysop access level
 but haven't the minimum sysop-level you entered in the config
 are specified. 
 
 Example:

 --@{b}----------------------@{ub}> cut here <@{b}---------------------@{ub}--
 @{fg shine}Anti-g
 Skeleton
 BillGates
 ...@{fg text}
 --@{b}----------------------@{ub}> cut here <@{b}---------------------@{ub}--
 
 (BTW: the names are case insensitive)


                            @{" <- back " link "install" 0}

@endnode

@node "tu-diz" "T-Updater.diz"
@next "install"
@prev "install"
@{u}@{b} T-Updater.diz: @{ub}@{uu}
 
 This file is copied as 'file_id.diz' in the archives
 generated by the T-Updater.
 
 Maximum line length:    44 characters
 allowed @{"keywords" link "syntax" 66}:
 
         @{b}ID_DATE@{ub}       : date/time string for the archive
                         format: day/month/year  hour/minutes
                         @{i}TYPE: string (max. length: 15)@{ui}
 
         @{b}ID_NAME@{ub}       : name of the bbs
                         @{i}TYPE: string (max. length: 31)@{ui}

 (Don't forget the leading '@' and the ending ';' for the keywords...)



                            @{" <- back " link "install" 0}

@endnode

@node "tu-output" "T-Updater.output.ami/.ibm"
@next "install"
@prev "install"
@{u}@{b} T-Updater.output.ami/.ibm: @{ub}@{uu}

 There's always two seperate files for Amiga, respectively IBM ANSI.
 
 @{"Nodes" link "syntax" 16}:
 
 @{fg shine}#TOP=<integer>@{fg text}
 
 	The 'header' of the T-Updater.
 	Shown after the logo and before the entries.
 	The integer argument specifies the number of the lines the
 	TOP section will encompass. (user-definable)
 
 	Maximum line length:	1024 characters 
 
 	allowed @{"keywords" link "syntax" 66}: (Don't forget the leading '@')
 
 	@{b}CALLS_TD@{ub}	: How often the T-Updater has been called today.
 			  @{i}TYPE:	long integer@{ui}
 	@{b}CALLS@{ub}		: How often the T-Updater has been called AT ALL.
 			  @{i}TYPE:	long integer@{ui}
 	@{b}CALLS_U@{ub}		: How often the T-Updater has been called by the user.
 			  @{i}TYPE: long integer@{ui}
 	@{b}FILES_TD@{ub}	: How many files have been downloaded via the T-Updater
 			  today.
 			  @{i}TYPE: long integer@{ui}
 	@{b}FILES@{ub}		: How many files have been downloaded via the T-Updater
 			  AT ALL.
 			  @{i}TYPE: long integer@{ui}
 	@{b}FILES_U@{ub}		: How many files have been downloaded via the T-Updater
 			  by the user.
 			  @{i}TYPE: long integer@{ui}
 	@{b}PAGE@{ub}		: The current page number.
 			  @{i}TYPE: integer@{ui}
 	@{b}PAGES@{ub}		: The total number of available pages.
 			  @{i}TYPE: integer@{ui}
 
 @{fg shine}#ITEMS@{fg text}		(Lines:	2)
 
 	The listing of the available files, shown after the #TOP and before
 	the #BOTTOM.
 	The ITEMS section has two lines:
 		1.)	output for flagged files
 		2.)	output for un-flagged files
 	
 	Maximum line length:	255 characters
 
 	allowed @{"keywords" link "syntax" 66}:
 
 	@{b}NR@{ub}		: number of the file
 			  @{i}TYPE: integer@{ui}
 	@{b}NAME@{ub}		: name of the file
 			  @{i}TYPE: string (max. length: 30)@{ui}
 	@{b}SIZE@{ub}		: size of the file in kilobytes
 			  @{i}TYPE: long integer@{ui}
 	@{b}DATE@{ub}		: date of the file 
 			  (either 'today'/'yesterday'/weekday or YEAR-MONTH-DAY)
 			  @{i}TYPE: string (max. length: 9)@{ui}
 	@{b}TIME@{ub}		: modification time of the file (hour:minute)
 			  @{i}TYPE: string (max. length: 5)@{ui}
 	@{b}COMMENT@{ub}		: file comment (either amigados or FileId.library)
 			  @{i}TYPE: string (max. length: 80)@{ui}
 
 @{fg shine}#BOTTOM=<integer>@{fg text}
 
 	The lower part of the file listing, as opposed to the TOP.
 	Shown after the file listing and before the prompt.
 
 	Maximum line length:	1024 characters
 
 	allowed @{"keywords" link "syntax" 66}:
 	
 	none 	(just static/fixed text)
 
 @{fg shine}#PROMPTN@{fg text}  and   @{fg shine}#PROMPTS@{fg text}	(Lines: 1)
 
 	The prompt line, the last line on the screen.
 	The difference between PROMPTN and PROMPTS is that the latter
 	is used for the people who have a sysop access level, while
 	the first one is for the mortal users...
 
 	Maximum line length:	1024 characters
 	
 	allowed @{"keywords" link "syntax" 66}:
 
 	@{b}FLAG@{ub}		: number of selected files
 			  @{i}TYPE: integer@{ui}
 	@{b}MAX@{ub}		: total number of files
 			  @{i}TYPE: integer@{ui}
 
 @{fg shine}#JUMPS@{fg text}		(Lines:	4)
 	
 	Some strings used by the T-Updater (you could call 'em 'subroutines')
 	
 	1st line)
 		Updates the number of flagged files in the PROMPTN line.
 
 		allowed @{"keywords" link "syntax" 66}:
 
 		@{b}POSY@{ub}		: y-coordinate of the prompt line
 				  @{i}TYPE: integer@{ui}
 		@{b}FLAG@{ub}		: number of selected files
 				  @{i}TYPE: integer@{ui}
 
 	2nd line)
 		Same as line one, but for the PROMPTS line.
 
 	3rd line)
 		Gets called when a file gets flagged.
 	
 		allowed @{"keywords" link "syntax" 66}:
 
 	 	@{b}POSY@{ub}		: y-coordinate of the prompt line
                 	          @{i}TYPE: integer@{ui}
 		@{b}NR@{ub}		: number of the flagged file
 				  @{i}TYPE: integer@{ui}
 	4th line)
 		Same as number three, but when files get un-flagged.
 
 
 
                            @{" <- back " link "install" 0}

@endnode

@node "bugs" "--------) bUG REPORT (--------"
@next "plans"
@prev "touse"
@{b}@{u} Bugs: @{ub}@{uu}

  This is a early version. I had not the time to test it over months so
  there can be some bugs. If you find some please try to contact me!
 
                            @{" back to main menu " link "main" 0}
@endnode

@node "touse" "-------) HOW TO USE (--------"
@next "bugs"
@prev "install"
@{b}@{u} How To Use: @{ub}@{uu}
 
 I think you should be able to use this door without my instruction :)

                            @{" back to main menu " link "main" 0}
@endnode

@node "plans" "--------) HISTORY/FUTURE (--------"
@next "reg"
@prev "bugs"
@{b}@{u} History: @{ub}@{uu}

 - v1.0 (96-08-10) first public release

 - v1.1 (96-08-17) - fixed bug when two users pack at the same time
                   - added displaying of filetime
                   - added local downloading (using the tempest prompts)
                   - changed download to use the default protocol
                   - fixed bug when user lose carrier will downloading

 - v1.2 (96-08-27) - fixed bug in ibm-output
                   - added kill file(s)
                   - added flag since date
                   - added upload file(s) from remote

 - v2.0 (96-09-28) - added external file_id.diz file
                   - added external names-file for sysopaccess
                   - added FileId.library support
                   - made packer user selectable
                   - added prefs for en/disable packers
                   - added prefs for comment-type
                   - added prefs for filename-format
                   - added gui-config programm:
                   - added external design-files

 - v2.1 (96-10-04) - typo in output file
                   - in  config-prg the updates-path was set to temp
                     path if entered by hand - fixed
                   - fixed bug in calculation of max-pages
                   - speeded startup a little bit
                   - changed output a little bit

 - v2.2 (96-11-08) - fixed bug with path-names
                   - fixed bug with deflagging files
                   - using new serialnumbers for data
                   - fixed two major bugs in tagitems routine
                   - changes internal structs so there is no
                     filelimit anymore (and it is a lot faster :) )
                   - fixed bug with undeleted files in tempdir

 - v2.3 (96-11-09) - fixed output-files
                   - fixed problem with wrong userdatas
                   - fixed problem with logofiles
                   - fixed bug in userdata save-routine

 - v2.4 (96-12-29) - fixed bug in calculation of first item
                     in a page 
                   - added "p #" command which allows you to
                     jump direct to teh page #

@{b}@{u} TODO: @{ub}@{uu}
 
don't know... have really no idea now ;)

                             @{" back to main menu " link "main" 0}
@endnode

@node "reg" "--------) REGISTRATION (---------"
@next "disclaimer"
@prev "plans"
@{b}@{u} Registration: @{ub}@{uu}
 
 
         @{b}@{fg shine}@{bg fill}DON'T PANIC@{ub}@{fg text}@{bg back}
 (this should be written in large, friendly letters)
 
 @{i}@{fg shine}No registration fee.@{ui}@{fg text}
 But please send me a mail if you use this program.
 I'm interested in your opinion.

 
                            @{" back to main menu " link "main" 0}
@endnode

@node "disclaimer" "--------) DISCLAIMER (---------"
@next "author"
@prev "reg"
@{b}@{u} DISCLAIMER: @{ub}@{uu}
 
 USE ENTIRELY AT YOUR OWN RISK.  Neither I nor any other of the 1oo% members
 will  take  ANY  responsibility  if  this  program does NOT what it should.
 However,  the  program  has  been running on my BBS since I wrote the first
 version and did no harm at all.

 This  archive  is spread as "Freeware".  That means:  no charge is made for
 it,  yet you may NOT modify it in any way, and the Copyright remains at the
 author.

 Neither  this  program  nor  parts of it may be spread via Aminet!  Support
 your local BBS scene and don't ask why the situation has become worse as it
 is  now,  because  THIS  is  the  answer:  "Aminet is free, so why should I
 bother about you and your fucking BBS?"
 

 
                            @{" back to main menu " link "main" 0}

@endnode

@node "author" "--------) AUTHOR (--------"
@next "releases"
@prev "disclaimer"
@{b}@{u} Author: @{ub}@{uu}
 
 @{fg shine}Anti-g/1oo%/BB@{fg text} - @{"Outer Space" link "outerspace" 0} (1 x USR V.Everything, 2 x ISDN)
 
 you can reach me under:
 
 @{fg fill}Anti-g@timewarp.insider.org@{fg text} (email)
 
 Or leave me a mail at:
 
 Dawn of Eternity - Another World - Wastlands - Sado City
 Aurora Borealis - Toon Town - Funhouse - Traders Paradise
 
 or look for me (Anti-g) in IRC (most of the time at @{i}#tempest@{ui}
 and @{i}#amielite@{ui})
 

                            @{" back to main menu " link "main" 0}
@endnode

@node "outerspace" "--------) CALL THIS!! (--------"
@next "greets"
@prev "author"
                                                   @{fg shine}.@{fg text}
      ..........................             :    @{fg shine} |@{fg text}
     @{fg fill} @{fg text}:                     @{fg shine}_______   ___:___      |___   _______   _______@{fg text}
      :                    /¯  _   @{fg shine}\\@{fg text} /   |  @{fg shine}¬\\@{fg text}    ____/@{fg shine}_@{fg text} /  @{fg shine}___@{fg text} @{fg shine}¯\\@{fg text} /  @{fg shine}___@{fg text}  @{fg shine}\\@{fg text}
      :                   /    |    @{fg shine}\\@{fg text}    |    @{fg shine}\\@{fg text}    |   @{fg shine}¯\\@{fg text}   \\____/@{fg shine}_@{fg text}   \\_  _/@{fg shine}_@{fg text}
      :@{fg fill}           :::::@{fg text}  /          @{fg shine} \\         \\         \\         \\@{fg text}   |    @{fg shine}¯\\@{fg text}
         @{fg fill} ..:::::::::::@{fg text} /_____________@{fg shine}\\@{fg text}  _______@{fg shine}\\@{fg text} __      @{fg shine}\\@{fg text}  _______@{fg shine}\\@{fg text}  |      @{fg shine}\\@{fg text}
        @{fg fill}::::··    :::::@{fg text}                            7_______@{fg shine}\\@{fg text}           |_______@{fg shine}\\@{fg text}
       @{fg fill}:::@{fg text}                    kiCK÷dA÷rEALiTiEZ:                       :
       @{fg fill}:::         ..::::::..@{fg text}      @{b}aNTi-g^mEGAmAN^mAT^nEUROdANCER!@{ub}     :
       @{fg fill}:::.   ..:::::::::::::::@{fg text}  @{fg shine}_________   _______   _______   _______@{fg text}
       @{fg fill} ·:::::::···   ·:::::::::@{fg text}    @{fg shine} ___@{fg text}  @{fg shine}\\@{fg text} /  @{fg shine}___@{fg text}  @{fg shine}\\@{fg text} /   ___/@{fg shine}_@{fg text} /  @{fg shine}___@{fg text}  @{fg shine}\\@{fg text}
                        @{fg fill}·::::::::@{fg text}    \\_@{fg shine}¬@{fg text}   @{fg shine}\\@{fg text}   \\_@{fg shine}¯@{fg text}   @{fg shine}\\@{fg text}    7   @{fg shine}¬\\@{fg text}   \\____/@{fg shine}_@{fg text}
                         @{fg fill}:::::::::@{fg text}    |     @{fg shine}\\@{fg text}   |     @{fg shine}\\@{fg text}         @{fg shine}\\@{fg text}        @{fg shine}¯\\@{fg text}
                         @{fg fill} ::::::::@{fg text}    |_____/ __|      @{fg shine}\\@{fg text} ________@{fg shine}\\@{fg text} __      @{fg shine}\\@{fg text}
                          @{fg fill}::::::::@{fg text}    |nd!      |_______@{fg shine}\\@{fg text}           7_______@{fg shine}\\@{fg text}
 @{fg fill}:::::::::::              ::::::::@{fg text}    |         :
 @{fg fill}:::::::::::             :::::::::@{fg text}    |  @{i}tHiS÷÷BBS÷÷pROViDES÷yOU÷wiTH@{ui}  :
    @{fg fill}::::::::.           .::::::::@{fg text}     :  @{i}a4ooo/o4o÷34megz/5.3gigz÷hd!@{ui}  :
    @{fg fill}:::::::::.         .::::::::@{fg text}         @{i}/T\\÷pOWER÷wiTH÷uSR33.6/iSDN!@{ui}  :
     @{fg fill}::::::::::......:::::::::: @{fg text}        @{i} sUPPORTiNG÷pEEcEE÷aND÷aMiGA!@{ui}  :
      @{fg fill}:::::::::::::::::::::::·@{fg text}      ...................................:
        @{fg fill}·::::::::::::::::::·@{fg text}

                            @{" back to Author " link "author" 0}
@endnode

@node "releases" "--------) RELEASES (--------"
@next "greets"
@prev "author"

@{b}@{u} FORMER ACCOMPLISHMENTS: @{ub}@{uu}

 @{b}1oo% T-LogonManager v2.0@{ub} @{i}- enables you to configure your personal login.
                            No more 'standard' login procedures.
                            No more angry users.
                            Makes the world a better place to live ;)@{ui}

     @{b}1oo% LastCaller v1.1@{ub} @{i}- LastCaller Door
                            Don't we all ask who was there before us?
                            This gives you the answer.
                            And statistics.
                            And envy of the autor (me) ;)@{ui}

      @{b}1oo% T-Updater v2.4@{ub} @{i}- file-update tool
                            (mainly for tempest updates)@{ui}

        @{b}1oo% T-Bulls v1.1@{ub} @{i}- Bulletin-Viewer
                            Auto IBM/Topaz and auto Screenlength,
                            Cursor-Control, Numercial input,
                            doors/text as bulletins etc...@{ui}

         @{b}1oo% T-Join v1.7@{ub} @{i}- Join-Conference-Tool
                            Auto IBM/Topaz and auto Screenlength,
                            Cursor-Control, Numercial mode etc...@{ui}

         @{b}1oo% T-Wall v1.3@{ub} @{i}- Just a wall?
                            No, THE Wall !
                            We germans have lots of experiences
                            with walls...
                            Now you can benefit from it.@{ui}
                          
@endnode

@node "greets" "--------) GREETINGS (--------"
@next "syntax"
@prev "releases"
@{b}@{u} my personal greetings go to: @{ub}@{uu}

 Neurodancer     : @{i}thanks for the ANSI logos!@{ui}
 Miracle         : @{i}thanks for the ANSI logos too!@{ui}
 Megaman         : @{i}thanks for the C book ;)@{ui}
 Skeleton        : @{i}thanks for the best bbs-proggie@{ui}
                   @{i}available and for helping me with@{ui}        
                   @{i}some problems@{ui}
 DBest           : @{i}Hope i meet you in IRC soon!@{ui}
 Jupiter8        : @{i}Nice new doors@{ui}
 Michael Dingler : @{i}thanks for helping and the doc...@{ui}
 
 Arch-Magi - Baffle - Blacky - Crawl - Chelsea - Cyberpunk
 Deathknight - Devil - Dreamer - Fatal - Fate - Fury
 Intercode - JamesWest - Joker - Leatherface - LoRay
 Schwabenpower - Smart-E - The Bird - Treach - Zinok- Zero
 

 and all the people I forgot...
 (you know who you are)


                            @{" back to main menu " link "main" 0}
@endnode

@node "syntax" "--------) OUTPUT FILE SYNTAX (--------"
@next "main"
@prev "greets"

                   @{b}@{fg shine} OUTPUT FILE SYNTAX:
                   ~~~~~~~~~~~~~~~~~~~~~@{ub}@{fg text}

@{u}@{b} Overview: @{ub}@{uu}
 
 This file describes the syntax of my configuration files.
 With them you´re able to change every aspect (well, not every,
 just the ones I let you...) of the program.
 
 I'll create a sample configuration in this documentation to show
 you every step you need to do it on your own. 
 
@{u}@{b} Basics: @{ub}@{uu}

 @{b}1.) Nodes@{ub}
 
 A configuration is divided into several parts called 'nodes'.
 A Node can easily be recognized by it's leading number sign
 ('#'). Note that this '#' has to be the FIRST character on the
 line, not even white spaces (TAB, SPACE) are allowed before it.
 
 This 'node' is used to distinguish between the different sections
 of the configuration file, e.g. two different listings on the
 same screen.
 
 There are two kinds of nodes, those with a fixed length and the
 ones with a user-defined length.
 If the length of the node isn't specified in the program, you can
 tell it the program by adding a '=<integer>' to the node definition.
 
 	@{b}Example:@{ub}
 	We create a file 'foobar.conf' for our sample application
 	'FooBarUtil - a Bill-Gates-killer for Tempest'. The Screen
 	output starts with the node 'TOP' where you can enter a 
 	Title, the name of your BBS etc...
 	The TOP-node has a user-definable length. As we're quite
 	unimaginative today, we decide that we just need one line.
 	This will look kinda like this:
 
@{fg shine} 		#TOP=1@{fg text}
 	(Note: No TABs before the '#'!)
 
 There should be no spaces between the '=' sign and the node name,
 respectively the number.
 
 @{b}2.) Output:@{ub}
 
 Well, now to the true contents of the file, the output! 
 The output is the text the user will see if he uses the BBS-Door.
 You can use all the familiar ANSI sequences here to set the color,
 control the cursor etc. ...
 
 	@{b}Example:@{ub}
 	Well, after the '#TOP' we now have to input the output ;)
 	As I said before, we're quite unimaginative, so we won't
 	use ANSI or anything funky, just plain, vanilla, boring
 	ASCII code.
 	Here is our whole file so far:
 	
@{fg shine} 		#TOP=1@{fg text}
 		-------------> LameBBS FooBarList <--------------
 
 	That's all folks! I'm a real graphical wiz...
 
 @{b}3.) Keywords:@{ub}
 
 Til now we just can write static text to the screen which will look
 the same to each user on each login. But this won't suffice for most
 programs, you have to have a way to print different output, e.g.
 new files in a file-listing program, users in a last-caller program etc.
 
 Needless to say that I DO provide you with a way to do this, while still
 allowing you to customize it according to you needs. 
 It's all done by KEYWORDS.
 
 Every line(s) has its own keywords, like the current TIME or DATE, or the
 NAME of a file...
 All keywords start with an ampersand character ('@'), much like a node
 starts with a number sign (or 'pound' or whatever you call it...).
 
 My configuration files enable you to format the output of those keywords,
 using a 'C'-like syntax.
 This allows you to specify, e.g. the minimum number of characters for the
 keyword (should it look like '2' or '00002', etc.).
 
 In the text it's used kinda like this: '@{fg shine}Page Nr.: @PAGE=%2d;@{fg text}'
 This will display the actual page number in the program (Well, if the pro-
 gram supports it...).
 Let's look at the definition in a little bigger detail:
 
 @{fg shine}PAGE@{fg text}    <--- This tells the program to write the variable PAGE in this place
 	     
 @{fg shine}=@{fg text}	 <--- 'nuff said...
 
 @{fg shine}%@{fg text}	 <--- This is the prefix of the formatting string
 
 @{fg shine}2@{fg text}	 <--- minimum character number
 
 @{fg shine}d@{fg text}	 <--- The variable is a 'd'ecimal
 
 @{fg shine};@{fg text}       <--- This is the end of the keyword
 
 This whole thing is called 'value substitution', that means, instead of the 
 string '@PAGE=%2d;', the current page number is written to the screen.
 

@{u}@{b} Formatting Rules :@{ub}@{uu}
 
 I'll now explain some of the most common formatting options. If you want
 something more powerful, check the @{"advanced guide" link "c-syntax" 0}.
 
 A formatting string theoretically looks like this:
 
@{fg shine} 	%[flags][width][.precision][size]type@{fg text}
 
 As you can see, it always starts with a percentage sign as a prefix.
 
 Then the 'flags' follow. I'll explain some of the most common ones:
 
 	-	The string is left-justified within the space
 		of the 'width'
 		(Default is right-justification)
 
 	+	If this flag is set, then a plus or minus sign is
 		placed before the output. If omitted, only negative
 		characters will be signed (with a minus sign, of course)
 
 	#	a pound sign pads the string (if its a number) with
 		leading zeroes.
 
 
 The next part is the width specifier, which sets the minimum of characters
 the output string will contain. That's all!
 So if you set it to 10, your output will be at least ten characters long.
 (Note: A SPACE is a character, too!)
 
 Well, optionally you can now enter the precision of the string.
 But what does it mean? Well, depending on the type of the @KEYWORD it 
 can do the follwing:
 	
 	If it's a integer (for the non-programmers: a non-fractional
 	number) then the precision specifies the minimum number of 
 	digits. If the number doesn't have that much digits, leading
 	zeroes are supplied.
 
 	If it's a string, then the precision is the maximum number
 	of characters the output string will get from the @KEYWORD.
 
 Size would come next, but it's seldom used. I couldn't see an occasion
 where it would be useful...
 
 And finally we reached the type argument, which tells the formatting
 routine which type the @KEYWORD is.
 In the configuration files, only strings and integers are used.
 
 	's'	    --> string type ("text")
 	'd' or 'i'  --> integer type ("number")
 		
 It's that simple!
 
 We now reached the end of our C-style value substitution excourse...
 
 
 ---
 
 Now you're able to create the output of my programs on your own.
 Look at the supplied configuration files for inspiration.
 
 BTW: the node- and keywordnames are case insensitive.

                            @{" back to main menu " link "main" 0}
@endnode

@node "c-syntax" "Advanced Formatting Strings"
@next "syntax"
@prev "syntax"
@{u}@{b} Advanced Formatting Strings: @{uu}@{ub}

 Each conversion specification must begin with a percent character
 (%).  To place an ordinary percent into the output stream, precede
 it with another percent in the fmt string.  That is, %% will send
 a single percent character to the output stream.  A specification
 has the following format:

    %[flags][width][.precision][size]type

 The brackets ([]) indicate optional fields.  Each field is defined
 as follows:

    flags
	controls output justification and the printing of signs,
	blanks, decimal places, and hexadecimal prefixes.

	If any flag characters are used, they must appear after
	the percent.  Valid flags are as follows:

	- (minus)
	    causes the result to be left-justified within the
	    field specified by width or within the default width.

	+ (plus)
	    causes a plus or minus sign to be placed before the
	    result.  This flag is used in conjunction with the
	    various numeric conversion types.  If it is absent,
	    the sign character is generated only for a negative
	    number.

	blank
	    causes a leading blank for a positive number and a
	    minus sign for a negative number.  This flag is
	    similar to the plus.  If both the plus and the blank
	    flags are present, the plus takes precedence.

	# (pound)
	    causes special formatting.	With the o, x, and X
	    types, the pound flag prefixes any nonzero output with
	    0, 0x, or 0X, respectively.  With the f, e, and E
	    conversion types, the pound flag forces the result to
	    contain a decimal point.  With the g and G types, the
	    pound flag forces the result to contain a decimal
	    point and retain trailing zeroes.

	0 (zero)
	    pads the field width with leading zeros instead of
	    spaces for the d, i, o, u, x, X, e, E, f, g, and G
	    conversion types.  If the minus flag is also used, the
	    zero flag is ignored.  If a precision is specified,
	    the zero flag is ignored for conversion types d, i, o,
	    u, x, and X.  Behavior of the zero flag is undefined
	    for the remaining conversion types.

    width
	specifies the field width, which is the minimum number of
	characters to be generated for this format item.

	The width is a nonnegative number that specifies the
	minimum field width.  If fewer characters are generated by
	the conversion operation, the result is padded on the left
	or right (depending on the minus flag described above).  A
	blank is used as the padding character unless width begins
	with a zero.  In that case, zero padding is performed.	If
	the minus flag appears, padding is performed with blanks.
	width specifies the minimum field width, and it will not
	cause lengthy output to be truncated.  Use the precision
	specifier for that purpose.

	If you do not want to specify the field width as a
	constant in the format string, you can code it as an
	asterisk (*), with or without a leading zero.  The
	asterisk indicates that the width value is an integer in
	the argument list.  See the examples for more information
	on this technique.

    precision
	specifies the field precision, which is the required
	precision of numeric conversions or the maximum number of
	characters to be copied from a string, depending on the
	type field.

	The meaning of the precision item depends on the field
	type, as follows:

	    Type	       Meaning
	    ----	       -------
	     c		       The precision item is ignored.
	     d, i, o, u, x, X  The precision is the minimum number
			       of digits to appear.  If fewer
			       digits are generated, leading
			       zeroes are supplied.
	     e, E, f	       The precision is the number of
			       digits to appear after the decimal
			       point.  If fewer digits are
			       generated, trailing zeroes are
			       supplied.
	     g, G	       The precision is the maximum number
			       of significant digits.
	     s		       The precision is the maximum number
			       of characters to be copied from the
			       string.

	As with the width item, you can use an asterisk for the
	precision to indicate that the value should be picked up
	from the next argument.

    size
	can be either L for long double, l for large size, or h
	for small size.  When used with the d, i, o, u, x, or X
	conversion specifiers, h and l select argument types of
	short * and long *, respectively.  When used with the e,
	E, f, g, or G conversion specifiers, the L specifies a
	long double argument instead of a double.

    type
	specifies the type of argument conversion to be done.
	Valid conversion types are as follows:

	    c
		specifies single-character conversion.	The
		associated argument must be an integer.  The
		single character in the right-most byte of the
		integer is copied to the output.
	    d
		specifies decimal-integer conversion.  The
		associated argument must be an integer, and the
		result is a string of digits preceded by a sign.
		If the plus and blank flags are absent, the sign
		is produced only for a negative integer.  If the
		large size modifier is present, the argument is
		taken as a long integer.
	    e
		specifies double-precision floating-point
		conversion.  The associated argument must be a
		double-precision floating-point number, and the
		result has the form:

		    -d.dde-ddd

		d is a single decimal digit, dd is one or more
		digits, and ddd is an exponent of at least two
		digits.  The first minus sign is omitted if the
		floating-point number is positive, and the second
		minus sign is omitted if the exponent is positive.
		The plus and blank flags dictate whether there
		will be a sign character emitted if the number is
		positive.  The number of digits before the decimal
		point depends on the magnitude of the number, and
		the number after the decimal point depends on the
		requested precision.  The value is rounded to the
		specified number of digits.  If no precision is
		specified, the default is six decimal places.
	    E
		specifies double-precision floating-point
		conversion.  This is exactly the same as type e
		except that the result has the form:

		    -d.ddE-ddd
	    f
		specifies double-precision floating-point
		conversion.  The associated argument must be a
		double-precision floating-point number, and the
		result has the form:

		    -dd.dd

		dd indicates one or more decimal digits.  The
		minus sign is omitted if the number is positive,
		but a sign character will still be generated if
		the plus or blank flag is present.  The number of
		digits before the decimal point depends on the
		magnitude of the number, and the number after the
		decimal point depends on the requested precision.
		If no precision is specified, the default is six
		decimal places.  If the precision is specified as
		0, or if there are no nonzero digits to the right
		of the decimal point, then the decimal point is
		omitted unless the pound (#) flag is specified.
	    g
		specifies double-precision floating-point
		conversion (general form).  The associated
		argument must be a double-precision floating-point
		number, and the result is in the e or f format,
		depending on which gives the most compact result.
		The e format is used only when the exponent is
		less than -4 or greater than the specified or
		default precision.  Trailing zeroes are
		eliminated, and the decimal point appears only if
		any nonzero digits follow it.
	    G
		specifies double-precision floating-point
		conversion (general form).  This is identical to
		the g format, except that the E type is used
		instead of the e type.
	    i
		specifies decimal-integer conversion.  The
		associated argument must be an integer, and the
		result is a string of digits preceded by a sign.
		If the plus and blank flags are absent, the sign
		is produced only for a negative integer.  If the
		large size modifier is present, the argument is
		taken as a long integer.
	    n
		specifies the argument will be a pointer to an
		integer into which is written the number of
		characters written so far by this call to the
		fprintf function.  If the large size flag is on,
		the argument must be a pointer to a long integer.
		If the small size flag is on, the argument must be
		a pointer to a short integer.
	    o
		specifies octal-integer conversion.  The
		associated argument is taken as an unsigned
		integer, and it is converted to a string of octal
		digits. If the large size modifier is present, the
		argument must be a long integer.
	    p
		specifies pointer conversion.  The associated
		argument is taken as a data pointer, and it is
		converted to hexadecimal representation.  Under
		AmigaDOS, the pointer is printed as 8 hexadecimal
		digits, with leading zeroes if necessary.
	    P
		specifies pointer conversion.  This is the same as
		the p format, except that uppercase letters are
		used as hexadecimal digits.  This conversion type
		is an extension to the ANSI standard.  Do not use
		this extension if you want your program to be
		ANSI-compatible.
	    s
		specifies string conversion.  The associated
		argument must point to a null-terminated character
		string.  The string is copied to the output, but
		the null byte is not copied.
	    u
		specifies unsigned decimal integer conversion.
		The associated argument is taken as an unsigned
		integer, and it is converted to a string of
		decimal digits.  If the large size modifier is
		present, the argument must be a long integer.
	    x
		specifies hexadecimal-integer conversion.  The
		associated argument is taken as an unsigned
		integer, and it is converted to a string of
		hexadecimal digits with lowercase letters.  If the
		large size modifier is present, the argument is
		taken as a long integer.
	    X
		specifies hexadecimal-integer conversion.  This is
		the same as the x format, except that uppercase
		letters are used as hexadecimal digits.

                            @{" <- back " link "syntax" 0}

@endnode
