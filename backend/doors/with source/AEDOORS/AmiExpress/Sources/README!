
This directory contains some example doors, and some specific E techniques
that you can use to make your life easier! Here's some info about the files:

	EXAMPLE.E

		Very simple E door, demonstrating some basic AEDoor commands.
		This door does nothing useful. It just set's up a valid door
		environment and then issues some /X door commands.

	EXAMPLE_EXC.E

		This is the same door as the previous one, except that it uses
		an E technique called EXCEPTIONS. This is REALLY very handy to
		handle LOST CARRIER and other situations. I suggest you have
		a good look at both programs!

	EXCEPTION.E

		Some more demo code on how to use EXCEPTIONS. It shows how to
		setup multiple exception handlers and also what benefit it
		gives when using them.
		This is also the only example that will pop up an alert if the
		library can't be opened. The others just use the WriteF func
		but since there is no valid output channel, you will never
		see the text (unless you run the door from CLI, which you
		shouldn't do in the first place!!!!)

	SHADOWW.E

		This is the only example that will do something useful. It is
		a conversion of the ShadowW Rexx Script made by Shadow Man/S8
		Please keep in mind that I didn't spend too much time on it,
		so the output isn't really what it should be and there may
		well be a couple of bugs in it :-)

	HOTKEY.E

		Uses the new HotKey() call in AEDoor.library V1.10+
		ATTENTION! This function returns -1 when there is a loss of
		carrier, while the others return NIL!! So in the exception
		setup we use the builtin E constant TRUE which has a value
		of -1 to test for a LC

	HKMANAGER.E

		Another example showing the use of the HotKey() call, and also
		how to use ami express internal commands or doors from within
		your door. Special note: this example uses Amiga ANSI codes,
		so it will only display correctly when using a terminal prg
		that uses the console.device to show the output... Like I said
		before, this is only an example :-)




NOTE: The Exists() function in Amiga E V2.1 is bugged! Normally it should
      return TRUE if the quoted expression evaluates to TRUE for at least 1
      item from the list.. But in reality it only returns TRUE if ALL items
      or the last item evaluates to TRUE.

	e.g.
		IF Exists({x},["A","B","T","U"],`key=x)
			...
		ENDIF

      The inner part of the IF statement will only get executed when the KEY
      var contains "U" (or when it contains all the list items which is ofcoz
      not possible)

