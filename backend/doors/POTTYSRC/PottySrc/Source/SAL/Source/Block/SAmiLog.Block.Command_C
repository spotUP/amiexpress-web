*****************************************************************************
* Input for command C(PS Records):                                          *
* ##_XYY - ## = Usernumber, X = Command Nº, [YY = Letter outputs]           *
*****************************************************************************
FTxt_C	Addq.l	#1,a0			Point to the next char.
	Subq.l	#4,d5
	Cmp.l	d5,a0			End of input?
	Bge	BadInput
	Addq.l	#4,d5

	Cmpi.b	#"0",(a0)		-.
	Blt	BadInput		 |_ Make Sure 1st digit is a number
	Cmpi.b	#"9",(a0)		 |  If not, Invalid CommandLine
	Bgt	BadInput		-'

	Moveq	#2,d2			2 Digit Number to convert

	Cmpi.b	#"0",1(a0)		-.
	Blt.s	FTC1Dig			 |_ Check 2nd digit is a number
	Cmpi.b	#"9",1(a0)		 |  If not, Check for 1 Dig #
	Ble.s	FTC2Dig			-'

FTC1Dig	Moveq	#1,d2			1 Dig to convert.

FTC2Dig	Bsr	Asc2Num			Ascii @ a0 » Num in d0
	Cmpi.l	#20,d0			If the number is over 20
	Bgt	BadInput		Bad Input.
	Tst.l	d0			If the number is zero (or neg!)
	Ble	BadInput

	Cmpi.b	#"_",(a0)+
	Bne	BadInput

	Lea	SCR01_Base(a5),a4
	Subq.l	#1,d0			Offset from user 1...
	Muls.w	#SCR_Len,d0		Point to the wanted user...
	Add.l	d0,a4			...with a3

	Move.l	4(a4),d1		-._ Offset from
	Muls.w	#SC_Len,d1		-'  data-struc one.
	Lea	SC01_Base(a5),a2	-._ Point to the
	Add.l	d1,a2			-'  desired sctructure.

;;;;;;;	So a2 points to the data struc wanted, while a4 points to CPS rate.

	Move.b	(a0)+,d0
	And.l	#$FF,d0			Clear all but lowest byte
	Cmpi.b	#"A",d0			-.
	Blt	BadInput		 |_ Make sure it's in the range.
	Cmpi.b	#"L",d0			 |
	Bgt	BadInput		-'

	Sub.l	#"A",d0			Offset from 1st command.
	Asl.l	#2,d0
	Lea	CTblBas(pc),a3		Base of Branch table.
	Jmp	(a3,d0)			Jump to the wanted Branch.

	Opt	O-			DO *NOT* Optimise, all must be FULL
CTblBas	Bra	FTx_C_A
	Bra	FTx_C_B
	Bra	FTx_C_C
	Bra	FTx_C_D
	Bra	FTx_C_E
	Bra	FTx_C_F
	Bra	FTx_C_G
	Bra	FTx_C_H
	Bra	FTx_C_I
	Bra	FTx_C_J
	Bra	FTx_C_K
	Bra	FTx_C_L
	Opt	O+

FTx_C_A
	IFNE	SC_Name
	Lea	SC_Name(a2),a2		Point to what to send. (Null Term)
	ENDC
	Move.w	NamLen(a5),d2		Length to write.
	Bra	FTxLOut
FTx_C_B	Lea	SC_Location(a2),a2	Point to what to send. (Null Term)
	Move.w	LocLen(a5),d2		Length to write.
	Bra	FTxLOut
FTx_C_C	Lea	SC_Date(a2),a2		Point to what to send. (Null Term)
	Bra	FTxLORD			Special routine for Record-Dates.
FTx_C_D	Lea	SC_FileName(a2),a2	Point to what to send. (Null Term)
	Bra	FTx_Out
FTx_C_E	Lea	SC_Baud(a2),a2		Point to what to send. (Null Term)
	Bra	FTx_Out
FTx_C_F	Lea	SC_Size(a2),a2		Point to what to send. (Null Term)
	Bra	FTx_Out
FTx_C_G	Move.l	a0,a3
	Addq.l	#2,a0
	BTst	#SC_F1_UpDn,SC_Flag_1(a2)	Download or upload?
	Beq.s	FTCG_0			No=Jump
FTCG_1	Addq.l	#1,a3			Point to char to output.
FTCG_0	Bra	FTxCOut
FTx_C_H	Move.l	a0,a3
	Addq.l	#2,a0
	BTst	#SC_F1_Batch,SC_Flag_1(a2)	Batch Upload?
	Beq.s	FTCH_0			No=Jump
FTCH_1	Addq.l	#1,a3			Point to char to output.
FTCH_0	Bra	FTxCOut
FTx_C_I	Move.l	a4,a2			Point to what to send. (Null Term)
	Bra	FTx_Out
FTx_C_J	Lea	SC_Mins(a2),a2		Point to what to send. (Null Term)
	Bra	FTx_Out
FTx_C_K	Lea	SC_Secs(a2),a2		Point to what to send. (Null Term)
	Bra	FTx_Out
FTx_C_L	Lea	SC_Effy(a2),a2		Point to what to send. (Null Term)
	Bra	FTx_Out
